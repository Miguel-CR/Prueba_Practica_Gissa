//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Infraestructure.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RegistroEntities : DbContext
    {
        public RegistroEntities()
            : base("name=RegistroEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<test_Habilidades> test_Habilidades { get; set; }
        public virtual DbSet<test_Telefono> test_Telefono { get; set; }
        public virtual DbSet<test_Usuario> test_Usuario { get; set; }
    
        public virtual ObjectResult<test_Telefono> test_PhoneRead(string usuarioCedula)
        {
            var usuarioCedulaParameter = usuarioCedula != null ?
                new ObjectParameter("UsuarioCedula", usuarioCedula) :
                new ObjectParameter("UsuarioCedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<test_Telefono>("test_PhoneRead", usuarioCedulaParameter);
        }
    
        public virtual ObjectResult<test_Telefono> test_PhoneRead(string usuarioCedula, MergeOption mergeOption)
        {
            var usuarioCedulaParameter = usuarioCedula != null ?
                new ObjectParameter("UsuarioCedula", usuarioCedula) :
                new ObjectParameter("UsuarioCedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<test_Telefono>("test_PhoneRead", mergeOption, usuarioCedulaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> test_UserCreate(string cedula, string nombre, string usuario, string clave, string correo, Nullable<int> tipoDeUsuario, Nullable<int> tipoDeIdentificacion, string telefono, Nullable<int> idHabilidad)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var tipoDeUsuarioParameter = tipoDeUsuario.HasValue ?
                new ObjectParameter("TipoDeUsuario", tipoDeUsuario) :
                new ObjectParameter("TipoDeUsuario", typeof(int));
    
            var tipoDeIdentificacionParameter = tipoDeIdentificacion.HasValue ?
                new ObjectParameter("TipoDeIdentificacion", tipoDeIdentificacion) :
                new ObjectParameter("TipoDeIdentificacion", typeof(int));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var idHabilidadParameter = idHabilidad.HasValue ?
                new ObjectParameter("IdHabilidad", idHabilidad) :
                new ObjectParameter("IdHabilidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("test_UserCreate", cedulaParameter, nombreParameter, usuarioParameter, claveParameter, correoParameter, tipoDeUsuarioParameter, tipoDeIdentificacionParameter, telefonoParameter, idHabilidadParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> test_UserDelete(string cedula)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("test_UserDelete", cedulaParameter);
        }
    
        public virtual ObjectResult<test_UserRead_Result> test_UserRead()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<test_UserRead_Result>("test_UserRead");
        }
    
        public virtual ObjectResult<test_UserReadById_Result> test_UserReadById(string cedula)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<test_UserReadById_Result>("test_UserReadById", cedulaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> test_UserUpdate(string cedula, string nombre, string usuario, string clave, string correo, Nullable<int> tipoDeUsuario, Nullable<int> tipoDeIdentificacion)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var tipoDeUsuarioParameter = tipoDeUsuario.HasValue ?
                new ObjectParameter("TipoDeUsuario", tipoDeUsuario) :
                new ObjectParameter("TipoDeUsuario", typeof(int));
    
            var tipoDeIdentificacionParameter = tipoDeIdentificacion.HasValue ?
                new ObjectParameter("TipoDeIdentificacion", tipoDeIdentificacion) :
                new ObjectParameter("TipoDeIdentificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("test_UserUpdate", cedulaParameter, nombreParameter, usuarioParameter, claveParameter, correoParameter, tipoDeUsuarioParameter, tipoDeIdentificacionParameter);
        }
    
        public virtual ObjectResult<test_Usuario_Habilidad_ReadByUserId_Result> test_Usuario_Habilidad_ReadByUserId(string usuarioCedula)
        {
            var usuarioCedulaParameter = usuarioCedula != null ?
                new ObjectParameter("UsuarioCedula", usuarioCedula) :
                new ObjectParameter("UsuarioCedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<test_Usuario_Habilidad_ReadByUserId_Result>("test_Usuario_Habilidad_ReadByUserId", usuarioCedulaParameter);
        }
    
        public virtual ObjectResult<test_Usuario> test_UserRead1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<test_Usuario>("test_UserRead1");
        }
    
        public virtual ObjectResult<test_Usuario> test_UserRead1(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<test_Usuario>("test_UserRead1", mergeOption);
        }
    
        public virtual ObjectResult<test_Usuario> test_UserReadById1(string cedula)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<test_Usuario>("test_UserReadById1", cedulaParameter);
        }
    
        public virtual ObjectResult<test_Usuario> test_UserReadById1(string cedula, MergeOption mergeOption)
        {
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<test_Usuario>("test_UserReadById1", mergeOption, cedulaParameter);
        }
    }
}
